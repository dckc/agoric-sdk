---

- name: Create start.sh
  become_user: "{{ service }}"
  become: yes
  copy:
    dest: "/home/{{ service }}/start.sh"
    content: "#! /bin/sh\nexec {{ execline }}"
    mode: '0755'

- name: Ensure public exists
  become_user: "{{ service }}"
  become: yes
  file:
    path: "/home/{{ service }}/public"
    state: directory
    mode: '0755'

- name: Copy network-config
  become_user: "{{ service }}"
  become: yes
  copy:
    src: "{{ SETUP_HOME }}/{{ service }}/data/cosmos-chain.json"
    dest: "/home/{{ service }}/public/network-config"
    mode: '0644'

- name: Copy genesis.json
  become_user: "{{ service }}"
  become: yes
  copy:
    src: "{{ SETUP_HOME }}/ag-chain-cosmos/data/genesis.json"
    dest: "/home/{{ service }}/public/genesis.json"
    mode: '0644'

- name: "Stat {{ NETWORK_NAME }}.crt"
  delegate_to: localhost
  stat:
    path="{{ SETUP_HOME }}/{{ NETWORK_NAME }}.crt"
  register: stat_crt

- name: "Copy {{ NETWORK_NAME }}.crt"
  become_user: "{{ service }}"
  become: yes
  copy:
    src: "{{ SETUP_HOME }}/{{ NETWORK_NAME }}.crt"
    dest: "/home/{{ service }}/{{ NETWORK_NAME }}.crt"
    mode: '0644'
  when: stat_crt.stat.exists

- name: "Stat {{ NETWORK_NAME }}.key"
  delegate_to: localhost
  stat:
    path="{{ SETUP_HOME }}/{{ NETWORK_NAME }}.key"
  register: stat_key

- name: "Copy {{ NETWORK_NAME }}.key"
  become_user: "{{ service }}"
  become: yes
  copy:
    src: "{{ SETUP_HOME }}/{{ NETWORK_NAME }}.key"
    dest: "/home/{{ service }}/{{ NETWORK_NAME }}.key"
    mode: "0600"
  when: stat_key.stat.exists
